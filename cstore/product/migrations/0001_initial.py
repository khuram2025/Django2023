# Generated by Django 3.2.16 on 2023-11-29 10:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('companies', '0001_initial'),
        ('locations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('seo_title', models.CharField(blank=True, max_length=70, verbose_name='SEO Title')),
                ('seo_description', models.CharField(blank=True, max_length=160, verbose_name='SEO Description')),
                ('seo_keywords', models.CharField(blank=True, max_length=255, verbose_name='SEO Keywords')),
                ('status', models.BooleanField(default=True, verbose_name='Status (Active/Disabled)')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/', verbose_name='Icon')),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', verbose_name='Category Image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='product.category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'unique_together': {('parent', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='CustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('field_type', models.CharField(choices=[('number', 'Number'), ('email', 'Email'), ('phone', 'Phone'), ('url', 'URL'), ('color', 'Color'), ('textarea', 'Textarea'), ('select', 'Select Box'), ('checkbox', 'Checkbox'), ('radio', 'Radio Button'), ('date', 'Date'), ('date_interval', 'Date Interval')], max_length=50, verbose_name='Type')),
                ('options', models.TextField(blank=True, help_text='Comma-separated values', verbose_name='Options')),
                ('is_searchable', models.BooleanField(default=False, verbose_name='Available for Search')),
                ('categories', models.ManyToManyField(blank=True, related_name='custom_fields', to='product.Category', verbose_name='Categories')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('check_with_seller', models.BooleanField(default=False, verbose_name='Check with Seller')),
                ('condition', models.CharField(choices=[('new', 'New'), ('used', 'Used')], max_length=50, verbose_name='Condition')),
                ('title', models.CharField(max_length=255, verbose_name='Listing Title')),
                ('description', models.TextField(verbose_name='Listing Description')),
                ('youtube_video_url', models.URLField(blank=True, null=True, verbose_name='YouTube Video URL')),
                ('facebook_video_url', models.URLField(blank=True, null=True, verbose_name='Facebook Video URL')),
                ('web_link', models.URLField(blank=True, null=True, verbose_name='Web Link')),
                ('custom_fields', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.category')),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='locations.city', verbose_name='City')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='companies.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='SellerInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=255, verbose_name='Contact Name')),
                ('phone_number', models.CharField(max_length=50, verbose_name='Phone Number')),
                ('phone_visible', models.BooleanField(default=False, verbose_name='Phone Visible on Ad')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('email_visible', models.BooleanField(default=False, verbose_name='Email Visible on Ad')),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Last Login')),
                ('member_since', models.DateTimeField(auto_now_add=True, verbose_name='Member Since')),
                ('status', models.BooleanField(default=False, verbose_name='Status (Online/Offline)')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User Account')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product_images/', verbose_name='Image')),
                ('alt_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='Alt text')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='seller_information',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='product.sellerinformation', verbose_name='Seller Information'),
        ),
        migrations.CreateModel(
            name='CustomFieldValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(verbose_name='Value')),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.customfield')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_field_values', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryCustomField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_custom_fields', to='product.category')),
                ('custom_field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.customfield')),
            ],
        ),
    ]
